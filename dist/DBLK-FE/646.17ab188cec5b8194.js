"use strict";(self.webpackChunkFinder=self.webpackChunkFinder||[]).push([[646],{5646:(Le,te,m)=>{function a(o,n,e,i){var p,r=arguments.length,l=r<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,e):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(o,n,e,i);else for(var g=o.length-1;g>=0;g--)(p=o[g])&&(l=(r<3?p(l):r>3?p(n,e,l):p(n,e))||l);return r>3&&l&&Object.defineProperty(n,e,l),l}function L(o,n){return function(e,i){n(e,i,o)}}function s(o,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(o,n)}function A(o,n,e,i){return new(e||(e=Promise))(function(l,p){function g(c){try{d(i.next(c))}catch(M){p(M)}}function b(c){try{d(i.throw(c))}catch(M){p(M)}}function d(c){c.done?l(c.value):function r(l){return l instanceof e?l:new e(function(p){p(l)})}(c.value).then(g,b)}d((i=i.apply(o,n||[])).next())})}m.d(te,{su:()=>x,SA:()=>u});var t=m(4650),w=m(9751),Ie=m(1135),Me=m(8996),We=m(5963),ne=m(7579),ie=m(576),we=m(3268);function ke(o,n,e){return e?ke(o,n).pipe((0,we.Z)(e)):new w.y(i=>{const r=(...p)=>i.next(1===p.length?p[0]:p),l=o(r);return(0,ie.m)(n)?()=>n(r,l):void 0})}var je=m(6451),Pe=m(4707),Be=m(3532),Ne=m(9468),xe=m(5363);class ze extends ne.x{constructor(){super(...arguments),this._value=null,this._hasValue=!1,this._isComplete=!1}_checkFinalizedStatuses(n){const{hasError:e,_hasValue:i,_value:r,thrownError:l,isStopped:p,_isComplete:g}=this;e?n.error(l):(p||g)&&(i&&n.next(r),n.complete())}next(n){this.isStopped||(this._value=n,this._hasValue=!0)}complete(){const{_hasValue:n,_value:e,_isComplete:i}=this;i||(this._isComplete=!0,n&&super.next(e),super.complete())}}function oe(o,n,e,i){if(e){if(!(0,Be.K)(e))return function(...r){return oe(o,n,i).apply(this,r).pipe((0,we.Z)(e))};i=e}return i?function(...r){return oe(o,n).apply(this,r).pipe((0,Ne.R)(i),(0,xe.Q)(i))}:function(...r){const l=new ze;let p=!0;return new w.y(g=>{const b=l.subscribe(g);if(p){p=!1;let d=!1,c=!1;n.apply(this,[...r,(...M)=>{if(o){const C=M.shift();if(null!=C)return void l.error(C)}l.next(1<M.length?M:M[0]),c=!0,d&&l.complete()}]),c&&l.complete(),d=!0}return b})}}function Fe(o,n,e){return oe(!1,o,n,e)}var Ze=m(9646),Ue=m(2843);const $e=m(5577).z;var De=m(4482),Ge=m(5032),Ae=m(5403),K=m(3900),Z=m(4004),He=m(4782),re=(m(1884),m(2722),m(8675)),Ye=m(5684),Xe=m(4033);const et={connector:()=>new ne.x};var it=m(6895);const Te=["*"];let S=(()=>{let o=class{};return o.\u0275fac=function(e){return new(e||o)},o.\u0275prov=t.\u0275\u0275defineInjectable({token:o,factory:function(n){return o.\u0275fac(n)}}),o})(),O=(()=>{let o=class{constructor(e,i){this._loader=e,this._zone=i,this._map=new Promise(r=>{this._mapResolver=r})}createMap(e,i){return this._zone.runOutsideAngular(()=>this._loader.load().then(()=>{const r=new google.maps.Map(e,i);this._mapResolver(r)}))}setMapOptions(e){return this._zone.runOutsideAngular(()=>{this._map.then(i=>{i.setOptions(e)})})}createMarker(e={},i=!0){return this._zone.runOutsideAngular(()=>this._map.then(r=>(i&&(e.map=r),new google.maps.Marker(e))))}createInfoWindow(e){return this._zone.runOutsideAngular(()=>this._map.then(()=>new google.maps.InfoWindow(e)))}createCircle(e){return this._zone.runOutsideAngular(()=>this._map.then(i=>("string"==typeof e.strokePosition&&(e.strokePosition=google.maps.StrokePosition[e.strokePosition]),e.map=i,new google.maps.Circle(e))))}createRectangle(e){return this._zone.runOutsideAngular(()=>this._map.then(i=>(e.map=i,new google.maps.Rectangle(e))))}createPolyline(e){return this._zone.runOutsideAngular(()=>this.getNativeMap().then(i=>{let r=new google.maps.Polyline(e);return r.setMap(i),r}))}createPolygon(e){return this._zone.runOutsideAngular(()=>this.getNativeMap().then(i=>{let r=new google.maps.Polygon(e);return r.setMap(i),r}))}createDataLayer(e){return this._zone.runOutsideAngular(()=>this._map.then(i=>{let r=new google.maps.Data(e);return r.setMap(i),r}))}createTransitLayer(e){return this._zone.runOutsideAngular(()=>this._map.then(i=>{let r=new google.maps.TransitLayer;return r.setMap(e.visible?i:null),r}))}createBicyclingLayer(e){return this._zone.runOutsideAngular(()=>this._map.then(i=>{let r=new google.maps.BicyclingLayer;return r.setMap(e.visible?i:null),r}))}containsLocation(e,i){return google.maps.geometry.poly.containsLocation(e,i)}subscribeToMapEvent(e){return new w.y(i=>{this._map.then(r=>{r.addListener(e,l=>{this._zone.run(()=>i.next(l))})})})}clearInstanceListeners(){return this._zone.runOutsideAngular(()=>{this._map.then(e=>{google.maps.event.clearInstanceListeners(e)})})}setCenter(e){return this._zone.runOutsideAngular(()=>this._map.then(i=>i.setCenter(e)))}getZoom(){return this._zone.runOutsideAngular(()=>this._map.then(e=>e.getZoom()))}getBounds(){return this._zone.runOutsideAngular(()=>this._map.then(e=>e.getBounds()))}getMapTypeId(){return this._zone.runOutsideAngular(()=>this._map.then(e=>e.getMapTypeId()))}setZoom(e){return this._zone.runOutsideAngular(()=>this._map.then(i=>i.setZoom(e)))}getCenter(){return this._zone.runOutsideAngular(()=>this._map.then(e=>e.getCenter()))}panTo(e){return this._zone.runOutsideAngular(()=>this._map.then(i=>i.panTo(e)))}panBy(e,i){return this._zone.runOutsideAngular(()=>this._map.then(r=>r.panBy(e,i)))}fitBounds(e,i){return this._zone.runOutsideAngular(()=>this._map.then(r=>r.fitBounds(e,i)))}panToBounds(e,i){return this._zone.runOutsideAngular(()=>this._map.then(r=>r.panToBounds(e,i)))}getNativeMap(){return this._map}triggerMapEvent(e){return this._map.then(i=>google.maps.event.trigger(i,e))}};return o.\u0275fac=function(e){return new(e||o)(t.\u0275\u0275inject(S),t.\u0275\u0275inject(t.NgZone))},o.\u0275prov=t.\u0275\u0275defineInjectable({token:o,factory:function(n){return o.\u0275fac(n)}}),o=a([s("design:paramtypes",[S,t.NgZone])],o),o})(),U=(()=>{let o=class{constructor(e){this._wrapper=e,this._layers=new Map}addTransitLayer(e,i){const r=this._wrapper.createTransitLayer(i);this._layers.set(e,r)}addBicyclingLayer(e,i){const r=this._wrapper.createBicyclingLayer(i);this._layers.set(e,r)}deleteLayer(e){return this._layers.get(e).then(i=>{i.setMap(null),this._layers.delete(e)})}toggleLayerVisibility(e,i){return this._layers.get(e).then(r=>{if(i.visible)return this._wrapper.getNativeMap().then(l=>{r.setMap(l)});r.setMap(null)})}};return o.\u0275fac=function(e){return new(e||o)(t.\u0275\u0275inject(O))},o.\u0275prov=t.\u0275\u0275defineInjectable({token:o,factory:function(n){return o.\u0275fac(n)}}),o=a([s("design:paramtypes",[O])],o),o})(),H=(()=>{let o=class{constructor(e,i){this._apiWrapper=e,this._zone=i,this._circles=new Map}addCircle(e){this._circles.set(e,this._apiWrapper.createCircle({center:{lat:e.latitude,lng:e.longitude},clickable:e.clickable,draggable:e.draggable,editable:e.editable,fillColor:e.fillColor,fillOpacity:e.fillOpacity,radius:e.radius,strokeColor:e.strokeColor,strokeOpacity:e.strokeOpacity,strokePosition:e.strokePosition,strokeWeight:e.strokeWeight,visible:e.visible,zIndex:e.zIndex}))}removeCircle(e){return this._circles.get(e).then(i=>{i.setMap(null),this._circles.delete(e)})}setOptions(e,i){return this._circles.get(e).then(r=>{"string"==typeof i.strokePosition&&(i.strokePosition=google.maps.StrokePosition[i.strokePosition]),r.setOptions(i)})}getBounds(e){return this._circles.get(e).then(i=>i.getBounds())}getCenter(e){return this._circles.get(e).then(i=>i.getCenter())}getRadius(e){return this._circles.get(e).then(i=>i.getRadius())}setCenter(e){return this._circles.get(e).then(i=>i.setCenter({lat:e.latitude,lng:e.longitude}))}setEditable(e){return this._circles.get(e).then(i=>i.setEditable(e.editable))}setDraggable(e){return this._circles.get(e).then(i=>i.setDraggable(e.draggable))}setVisible(e){return this._circles.get(e).then(i=>i.setVisible(e.visible))}setRadius(e){return this._circles.get(e).then(i=>i.setRadius(e.radius))}getNativeCircle(e){return this._circles.get(e)}createEventObservable(e,i){return new w.y(r=>{let l=null;return this._circles.get(i).then(p=>{l=p.addListener(e,g=>this._zone.run(()=>r.next(g)))}),()=>{null!==l&&l.remove()}})}};return o.\u0275fac=function(e){return new(e||o)(t.\u0275\u0275inject(O),t.\u0275\u0275inject(t.NgZone))},o.\u0275prov=t.\u0275\u0275defineInjectable({token:o,factory:function(n){return o.\u0275fac(n)}}),o=a([s("design:paramtypes",[O,t.NgZone])],o),o})();var se;let h=se=class{constructor(n){this._manager=n,this.clickable=!0,this.draggable=!1,this.editable=!1,this.radius=0,this.strokePosition="CENTER",this.strokeWeight=0,this.visible=!0,this.centerChange=new t.EventEmitter,this.circleClick=new t.EventEmitter,this.circleDblClick=new t.EventEmitter,this.drag=new t.EventEmitter,this.dragEnd=new t.EventEmitter,this.dragStart=new t.EventEmitter,this.mouseDown=new t.EventEmitter,this.mouseMove=new t.EventEmitter,this.mouseOut=new t.EventEmitter,this.mouseOver=new t.EventEmitter,this.mouseUp=new t.EventEmitter,this.radiusChange=new t.EventEmitter,this.rightClick=new t.EventEmitter,this._circleAddedToManager=!1,this._eventSubscriptions=[]}ngOnInit(){this._manager.addCircle(this),this._circleAddedToManager=!0,this._registerEventListeners()}ngOnChanges(n){this._circleAddedToManager&&((n.latitude||n.longitude)&&this._manager.setCenter(this),n.editable&&this._manager.setEditable(this),n.draggable&&this._manager.setDraggable(this),n.visible&&this._manager.setVisible(this),n.radius&&this._manager.setRadius(this),this._updateCircleOptionsChanges(n))}_updateCircleOptionsChanges(n){let e={},i=Object.keys(n).filter(r=>-1!==se._mapOptions.indexOf(r));i.forEach(r=>{e[r]=n[r].currentValue}),i.length>0&&this._manager.setOptions(this,e)}_registerEventListeners(){let n=new Map;n.set("center_changed",this.centerChange),n.set("click",this.circleClick),n.set("dblclick",this.circleDblClick),n.set("drag",this.drag),n.set("dragend",this.dragEnd),n.set("dragstart",this.dragStart),n.set("mousedown",this.mouseDown),n.set("mousemove",this.mouseMove),n.set("mouseout",this.mouseOut),n.set("mouseover",this.mouseOver),n.set("mouseup",this.mouseUp),n.set("radius_changed",this.radiusChange),n.set("rightclick",this.rightClick),n.forEach((e,i)=>{this._eventSubscriptions.push(this._manager.createEventObservable(i,this).subscribe(r=>{switch(i){case"radius_changed":this._manager.getRadius(this).then(l=>e.emit(l));break;case"center_changed":this._manager.getCenter(this).then(l=>e.emit({lat:l.lat(),lng:l.lng()}));break;default:e.emit({coords:{lat:r.latLng.lat(),lng:r.latLng.lng()}})}}))})}ngOnDestroy(){this._eventSubscriptions.forEach(function(n){n.unsubscribe()}),this._eventSubscriptions=null,this._manager.removeCircle(this)}getBounds(){return this._manager.getBounds(this)}getCenter(){return this._manager.getCenter(this)}};h.\u0275fac=function(n){return new(n||h)(t.\u0275\u0275directiveInject(H))},h.\u0275dir=t.\u0275\u0275defineDirective({type:h,selectors:[["agm-circle"]],inputs:{clickable:"clickable",draggable:["circleDraggable","draggable"],editable:"editable",radius:"radius",strokePosition:"strokePosition",strokeWeight:"strokeWeight",visible:"visible",latitude:"latitude",longitude:"longitude",fillColor:"fillColor",fillOpacity:"fillOpacity",strokeColor:"strokeColor",strokeOpacity:"strokeOpacity",zIndex:"zIndex"},outputs:{centerChange:"centerChange",circleClick:"circleClick",circleDblClick:"circleDblClick",drag:"drag",dragEnd:"dragEnd",dragStart:"dragStart",mouseDown:"mouseDown",mouseMove:"mouseMove",mouseOut:"mouseOut",mouseOver:"mouseOver",mouseUp:"mouseUp",radiusChange:"radiusChange",rightClick:"rightClick"},features:[t.\u0275\u0275NgOnChangesFeature]}),h._mapOptions=["fillColor","fillOpacity","strokeColor","strokeOpacity","strokePosition","strokeWeight","visible","zIndex","clickable"],h.ctorParameters=()=>[{type:H}],a([(0,t.Input)(),s("design:type",Number)],h.prototype,"latitude",void 0),a([(0,t.Input)(),s("design:type",Number)],h.prototype,"longitude",void 0),a([(0,t.Input)(),s("design:type",Object)],h.prototype,"clickable",void 0),a([(0,t.Input)("circleDraggable"),s("design:type",Object)],h.prototype,"draggable",void 0),a([(0,t.Input)(),s("design:type",Object)],h.prototype,"editable",void 0),a([(0,t.Input)(),s("design:type",String)],h.prototype,"fillColor",void 0),a([(0,t.Input)(),s("design:type",Number)],h.prototype,"fillOpacity",void 0),a([(0,t.Input)(),s("design:type",Object)],h.prototype,"radius",void 0),a([(0,t.Input)(),s("design:type",String)],h.prototype,"strokeColor",void 0),a([(0,t.Input)(),s("design:type",Number)],h.prototype,"strokeOpacity",void 0),a([(0,t.Input)(),s("design:type",String)],h.prototype,"strokePosition",void 0),a([(0,t.Input)(),s("design:type",Object)],h.prototype,"strokeWeight",void 0),a([(0,t.Input)(),s("design:type",Object)],h.prototype,"visible",void 0),a([(0,t.Input)(),s("design:type",Number)],h.prototype,"zIndex",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],h.prototype,"centerChange",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],h.prototype,"circleClick",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],h.prototype,"circleDblClick",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],h.prototype,"drag",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],h.prototype,"dragEnd",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],h.prototype,"dragStart",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],h.prototype,"mouseDown",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],h.prototype,"mouseMove",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],h.prototype,"mouseOut",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],h.prototype,"mouseOver",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],h.prototype,"mouseUp",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],h.prototype,"radiusChange",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],h.prototype,"rightClick",void 0),h=se=a([s("design:paramtypes",[H])],h);let V=(()=>{let o=class{constructor(e,i){this._wrapper=e,this._zone=i,this._layers=new Map}addDataLayer(e){const i=this._wrapper.createDataLayer({style:e.style}).then(r=>(e.geoJson&&this.getDataFeatures(r,e.geoJson).then(l=>r.features=l),r));this._layers.set(e,i)}deleteDataLayer(e){this._layers.get(e).then(i=>{i.setMap(null),this._layers.delete(e)})}updateGeoJson(e,i){this._layers.get(e).then(r=>{r.forEach(function(l){r.remove(l);var p=r.features.indexOf(l,0);p>-1&&r.features.splice(p,1)}),this.getDataFeatures(r,i).then(l=>r.features=l)})}setDataOptions(e,i){this._layers.get(e).then(r=>{r.setControlPosition(i.controlPosition),r.setControls(i.controls),r.setDrawingMode(i.drawingMode),r.setStyle(i.style)})}createEventObservable(e,i){return new w.y(r=>{this._layers.get(i).then(l=>{l.addListener(e,p=>this._zone.run(()=>r.next(p)))})})}getDataFeatures(e,i){return new Promise((r,l)=>{if("object"==typeof i)try{r(e.addGeoJson(i))}catch(p){l(p)}else"string"==typeof i?e.loadGeoJson(i,null,r):l("Impossible to extract features from geoJson: wrong argument type")})}};return o.\u0275fac=function(e){return new(e||o)(t.\u0275\u0275inject(O),t.\u0275\u0275inject(t.NgZone))},o.\u0275prov=t.\u0275\u0275defineInjectable({token:o,factory:function(n){return o.\u0275fac(n)}}),o=a([s("design:paramtypes",[O,t.NgZone])],o),o})();var ae;let st=0,k=ae=class{constructor(n){this._manager=n,this._addedToManager=!1,this._id=(st++).toString(),this._subscriptions=[],this.layerClick=new t.EventEmitter,this.geoJson=null}ngOnInit(){this._addedToManager||(this._manager.addDataLayer(this),this._addedToManager=!0,this._addEventListeners())}_addEventListeners(){[{name:"click",handler:e=>this.layerClick.emit(e)}].forEach(e=>{const i=this._manager.createEventObservable(e.name,this).subscribe(e.handler);this._subscriptions.push(i)})}id(){return this._id}toString(){return`AgmDataLayer-${this._id.toString()}`}ngOnDestroy(){this._manager.deleteDataLayer(this),this._subscriptions.forEach(n=>n.unsubscribe())}ngOnChanges(n){if(!this._addedToManager)return;var e=n.geoJson;e&&this._manager.updateGeoJson(this,e.currentValue);let i={};ae._dataOptionsAttributes.forEach(r=>i[r]=n.hasOwnProperty(r)?n[r].currentValue:this[r]),this._manager.setDataOptions(this,i)}};k.\u0275fac=function(n){return new(n||k)(t.\u0275\u0275directiveInject(V))},k.\u0275dir=t.\u0275\u0275defineDirective({type:k,selectors:[["agm-data-layer"]],inputs:{geoJson:"geoJson",style:"style"},outputs:{layerClick:"layerClick"},features:[t.\u0275\u0275NgOnChangesFeature]}),k._dataOptionsAttributes=["style"],k.ctorParameters=()=>[{type:V}],a([(0,t.Output)(),s("design:type",t.EventEmitter)],k.prototype,"layerClick",void 0),a([(0,t.Input)(),s("design:type",Object)],k.prototype,"geoJson",void 0),a([(0,t.Input)(),s("design:type",Function)],k.prototype,"style",void 0),k=ae=a([s("design:paramtypes",[V])],k);class Q{}let B=(()=>{let o=class{constructor(e){this._boundsChangeSampleTime$=new Ie.X(200),this._includeInBounds$=new Ie.X(new Map),this.bounds$=(0,Me.D)(e.load()).pipe($e(()=>this._includeInBounds$),function Ke(o){return(0,De.e)((n,e)=>{let i=!1,r=null;n.subscribe((0,Ae.x)(e,l=>{i=!0,r=l})),o.subscribe((0,Ae.x)(e,()=>{if(i){i=!1;const l=r;r=null,e.next(l)}},Ge.Z))})}(this._boundsChangeSampleTime$.pipe((0,K.w)(i=>(0,We.H)(0,i)))),(0,Z.U)(i=>this._generateBounds(i)),(0,He.d)(1))}_generateBounds(e){const i=new google.maps.LatLngBounds;return e.forEach(r=>i.extend(r)),i}addToBounds(e){const i=this._createIdentifier(e);if(this._includeInBounds$.value.has(i))return;const r=this._includeInBounds$.value;r.set(i,e),this._includeInBounds$.next(r)}removeFromBounds(e){const i=this._includeInBounds$.value;i.delete(this._createIdentifier(e)),this._includeInBounds$.next(i)}changeFitBoundsChangeSampleTime(e){this._boundsChangeSampleTime$.next(e)}getBounds$(){return this.bounds$}_createIdentifier(e){return`${e.lat}+${e.lng}`}};return o.\u0275fac=function(e){return new(e||o)(t.\u0275\u0275inject(S))},o.\u0275prov=t.\u0275\u0275defineInjectable({token:o,factory:function(n){return o.\u0275fac(n)}}),o=a([s("design:paramtypes",[S])],o),o})(),N=(()=>{let o=class{constructor(e,i){this._mapsWrapper=e,this._zone=i,this._markers=new Map}convertAnimation(e){return A(this,void 0,void 0,function*(){return null===e?null:this._mapsWrapper.getNativeMap().then(()=>google.maps.Animation[e])})}deleteMarker(e){const i=this._markers.get(e);return null==i?Promise.resolve():i.then(r=>this._zone.run(()=>{r.setMap(null),this._markers.delete(e)}))}updateMarkerPosition(e){return this._markers.get(e).then(i=>i.setPosition({lat:e.latitude,lng:e.longitude}))}updateTitle(e){return this._markers.get(e).then(i=>i.setTitle(e.title))}updateLabel(e){return this._markers.get(e).then(i=>{i.setLabel(e.label)})}updateDraggable(e){return this._markers.get(e).then(i=>i.setDraggable(e.draggable))}updateIcon(e){return this._markers.get(e).then(i=>i.setIcon(e.iconUrl))}updateOpacity(e){return this._markers.get(e).then(i=>i.setOpacity(e.opacity))}updateVisible(e){return this._markers.get(e).then(i=>i.setVisible(e.visible))}updateZIndex(e){return this._markers.get(e).then(i=>i.setZIndex(e.zIndex))}updateClickable(e){return this._markers.get(e).then(i=>i.setClickable(e.clickable))}updateAnimation(e){return A(this,void 0,void 0,function*(){(yield this._markers.get(e)).setAnimation(yield this.convertAnimation(e.animation))})}addMarker(e){const i=new Promise(r=>A(this,void 0,void 0,function*(){return this._mapsWrapper.createMarker({position:{lat:e.latitude,lng:e.longitude},label:e.label,draggable:e.draggable,icon:e.iconUrl,opacity:e.opacity,visible:e.visible,zIndex:e.zIndex,title:e.title,clickable:e.clickable,animation:yield this.convertAnimation(e.animation)}).then(r)}));this._markers.set(e,i)}getNativeMarker(e){return this._markers.get(e)}createEventObservable(e,i){return new w.y(r=>{this._markers.get(i).then(l=>{l.addListener(e,p=>this._zone.run(()=>r.next(p)))})})}};return o.\u0275fac=function(e){return new(e||o)(t.\u0275\u0275inject(O),t.\u0275\u0275inject(t.NgZone))},o.\u0275prov=t.\u0275\u0275defineInjectable({token:o,factory:function(n){return o.\u0275fac(n)}}),o=a([s("design:paramtypes",[O,t.NgZone])],o),o})(),J=(()=>{let o=class{constructor(e,i,r){this._mapsWrapper=e,this._zone=i,this._markerManager=r,this._infoWindows=new Map}deleteInfoWindow(e){const i=this._infoWindows.get(e);return null==i?Promise.resolve():i.then(r=>this._zone.run(()=>{r.close(),this._infoWindows.delete(e)}))}setPosition(e){return this._infoWindows.get(e).then(i=>i.setPosition({lat:e.latitude,lng:e.longitude}))}setZIndex(e){return this._infoWindows.get(e).then(i=>i.setZIndex(e.zIndex))}open(e){return this._infoWindows.get(e).then(i=>null!=e.hostMarker?this._markerManager.getNativeMarker(e.hostMarker).then(r=>this._mapsWrapper.getNativeMap().then(l=>i.open(l,r))):this._mapsWrapper.getNativeMap().then(r=>i.open(r)))}close(e){return this._infoWindows.get(e).then(i=>i.close())}setOptions(e,i){return this._infoWindows.get(e).then(r=>r.setOptions(i))}addInfoWindow(e){const i={content:e.content,maxWidth:e.maxWidth,zIndex:e.zIndex,disableAutoPan:e.disableAutoPan};"number"==typeof e.latitude&&"number"==typeof e.longitude&&(i.position={lat:e.latitude,lng:e.longitude});const r=this._mapsWrapper.createInfoWindow(i);this._infoWindows.set(e,r)}createEventObservable(e,i){return new w.y(r=>{this._infoWindows.get(i).then(l=>{l.addListener(e,p=>this._zone.run(()=>r.next(p)))})})}};return o.\u0275fac=function(e){return new(e||o)(t.\u0275\u0275inject(O),t.\u0275\u0275inject(t.NgZone),t.\u0275\u0275inject(N))},o.\u0275prov=t.\u0275\u0275defineInjectable({token:o,factory:function(n){return o.\u0275fac(n)}}),o=a([s("design:paramtypes",[O,t.NgZone,N])],o),o})();var le;let lt=0,E=le=class{constructor(n,e){this._infoWindowManager=n,this._el=e,this.isOpen=!1,this.infoWindowClose=new t.EventEmitter,this._infoWindowAddedToManager=!1,this._id=(lt++).toString()}ngOnInit(){this.content=this._el.nativeElement.querySelector(".agm-info-window-content"),this._infoWindowManager.addInfoWindow(this),this._infoWindowAddedToManager=!0,this._updateOpenState(),this._registerEventListeners()}ngOnChanges(n){this._infoWindowAddedToManager&&((n.latitude||n.longitude)&&"number"==typeof this.latitude&&"number"==typeof this.longitude&&this._infoWindowManager.setPosition(this),n.zIndex&&this._infoWindowManager.setZIndex(this),n.isOpen&&this._updateOpenState(),this._setInfoWindowOptions(n))}_registerEventListeners(){this._infoWindowManager.createEventObservable("closeclick",this).subscribe(()=>{this.isOpen=!1,this.infoWindowClose.emit()})}_updateOpenState(){this.isOpen?this.open():this.close()}_setInfoWindowOptions(n){let e={};Object.keys(n).filter(r=>-1!==le._infoWindowOptionsInputs.indexOf(r)).forEach(r=>{e[r]=n[r].currentValue}),this._infoWindowManager.setOptions(this,e)}open(){return this._infoWindowManager.open(this)}close(){return this._infoWindowManager.close(this).then(()=>{this.infoWindowClose.emit()})}id(){return this._id}toString(){return"AgmInfoWindow-"+this._id.toString()}ngOnDestroy(){this._infoWindowManager.deleteInfoWindow(this)}};E.\u0275fac=function(n){return new(n||E)(t.\u0275\u0275directiveInject(J),t.\u0275\u0275directiveInject(t.ElementRef))},E.\u0275cmp=t.\u0275\u0275defineComponent({type:E,selectors:[["agm-info-window"]],inputs:{isOpen:"isOpen",latitude:"latitude",longitude:"longitude",disableAutoPan:"disableAutoPan",zIndex:"zIndex",maxWidth:"maxWidth"},outputs:{infoWindowClose:"infoWindowClose"},features:[t.\u0275\u0275NgOnChangesFeature],ngContentSelectors:Te,decls:2,vars:0,consts:[[1,"agm-info-window-content"]],template:function(n,e){1&n&&(t.\u0275\u0275projectionDef(),t.\u0275\u0275elementStart(0,"div",0),t.\u0275\u0275projection(1),t.\u0275\u0275elementEnd())},encapsulation:2}),E._infoWindowOptionsInputs=["disableAutoPan","maxWidth"],E.ctorParameters=()=>[{type:J},{type:t.ElementRef}],a([(0,t.Input)(),s("design:type",Number)],E.prototype,"latitude",void 0),a([(0,t.Input)(),s("design:type",Number)],E.prototype,"longitude",void 0),a([(0,t.Input)(),s("design:type",Boolean)],E.prototype,"disableAutoPan",void 0),a([(0,t.Input)(),s("design:type",Number)],E.prototype,"zIndex",void 0),a([(0,t.Input)(),s("design:type",Number)],E.prototype,"maxWidth",void 0),a([(0,t.Input)(),s("design:type",Object)],E.prototype,"isOpen",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],E.prototype,"infoWindowClose",void 0),E=le=a([s("design:paramtypes",[J,t.ElementRef])],E);let Y=(()=>{let o=class{constructor(e,i){this._wrapper=e,this._zone=i,this._layers=new Map}addKmlLayer(e){const i=this._wrapper.getNativeMap().then(r=>new google.maps.KmlLayer({clickable:e.clickable,map:r,preserveViewport:e.preserveViewport,screenOverlays:e.screenOverlays,suppressInfoWindows:e.suppressInfoWindows,url:e.url,zIndex:e.zIndex}));this._layers.set(e,i)}setOptions(e,i){this._layers.get(e).then(r=>r.setOptions(i))}deleteKmlLayer(e){this._layers.get(e).then(i=>{i.setMap(null),this._layers.delete(e)})}createEventObservable(e,i){return new w.y(r=>{this._layers.get(i).then(l=>{l.addListener(e,p=>this._zone.run(()=>r.next(p)))})})}};return o.\u0275fac=function(e){return new(e||o)(t.\u0275\u0275inject(O),t.\u0275\u0275inject(t.NgZone))},o.\u0275prov=t.\u0275\u0275defineInjectable({token:o,factory:function(n){return o.\u0275fac(n)}}),o=a([s("design:paramtypes",[O,t.NgZone])],o),o})();var pe;let pt=0,I=pe=class{constructor(n){this._manager=n,this._addedToManager=!1,this._id=(pt++).toString(),this._subscriptions=[],this.clickable=!0,this.preserveViewport=!1,this.screenOverlays=!0,this.suppressInfoWindows=!1,this.url=null,this.zIndex=null,this.layerClick=new t.EventEmitter,this.defaultViewportChange=new t.EventEmitter,this.statusChange=new t.EventEmitter}ngOnInit(){this._addedToManager||(this._manager.addKmlLayer(this),this._addedToManager=!0,this._addEventListeners())}ngOnChanges(n){this._addedToManager&&this._updatePolygonOptions(n)}_updatePolygonOptions(n){const e=Object.keys(n).filter(i=>-1!==pe._kmlLayerOptions.indexOf(i)).reduce((i,r)=>(i[r]=n[r].currentValue,i),{});Object.keys(e).length>0&&this._manager.setOptions(this,e)}_addEventListeners(){[{name:"click",handler:e=>this.layerClick.emit(e)},{name:"defaultviewport_changed",handler:()=>this.defaultViewportChange.emit()},{name:"status_changed",handler:()=>this.statusChange.emit()}].forEach(e=>{const i=this._manager.createEventObservable(e.name,this).subscribe(e.handler);this._subscriptions.push(i)})}id(){return this._id}toString(){return`AgmKmlLayer-${this._id.toString()}`}ngOnDestroy(){this._manager.deleteKmlLayer(this),this._subscriptions.forEach(n=>n.unsubscribe())}};function ue(o){const n=["insert_at","remove_at","set_at"];return ke(e=>n.map(i=>o.addListener(i,(r,l)=>e.apply(o,[{newArr:o.getArray(),evName:i,index:r,previous:l}]))),(e,i)=>i.forEach(r=>r.remove()))}I.\u0275fac=function(n){return new(n||I)(t.\u0275\u0275directiveInject(Y))},I.\u0275dir=t.\u0275\u0275defineDirective({type:I,selectors:[["agm-kml-layer"]],inputs:{clickable:"clickable",preserveViewport:"preserveViewport",screenOverlays:"screenOverlays",suppressInfoWindows:"suppressInfoWindows",url:"url",zIndex:"zIndex"},outputs:{layerClick:"layerClick",defaultViewportChange:"defaultViewportChange",statusChange:"statusChange"},features:[t.\u0275\u0275NgOnChangesFeature]}),I._kmlLayerOptions=["clickable","preserveViewport","screenOverlays","suppressInfoWindows","url","zIndex"],I.ctorParameters=()=>[{type:Y}],a([(0,t.Input)(),s("design:type",Object)],I.prototype,"clickable",void 0),a([(0,t.Input)(),s("design:type",Object)],I.prototype,"preserveViewport",void 0),a([(0,t.Input)(),s("design:type",Object)],I.prototype,"screenOverlays",void 0),a([(0,t.Input)(),s("design:type",Object)],I.prototype,"suppressInfoWindows",void 0),a([(0,t.Input)(),s("design:type",String)],I.prototype,"url",void 0),a([(0,t.Input)(),s("design:type",Number)],I.prototype,"zIndex",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],I.prototype,"layerClick",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],I.prototype,"defaultViewportChange",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],I.prototype,"statusChange",void 0),I=pe=a([s("design:paramtypes",[Y])],I);let X=(()=>{let o=class{constructor(e,i){this._mapsWrapper=e,this._zone=i,this._polygons=new Map}addPolygon(e){const i=this._mapsWrapper.createPolygon({clickable:e.clickable,draggable:e.draggable,editable:e.editable,fillColor:e.fillColor,fillOpacity:e.fillOpacity,geodesic:e.geodesic,paths:e.paths,strokeColor:e.strokeColor,strokeOpacity:e.strokeOpacity,strokeWeight:e.strokeWeight,visible:e.visible,zIndex:e.zIndex});this._polygons.set(e,i)}updatePolygon(e){const i=this._polygons.get(e);return null==i?Promise.resolve():i.then(r=>this._zone.run(()=>{r.setPaths(e.paths)}))}setPolygonOptions(e,i){return this._polygons.get(e).then(r=>{r.setOptions(i)})}deletePolygon(e){const i=this._polygons.get(e);return null==i?Promise.resolve():i.then(r=>this._zone.run(()=>{r.setMap(null),this._polygons.delete(e)}))}getPath(e){return this._polygons.get(e).then(i=>i.getPath().getArray())}getPaths(e){return this._polygons.get(e).then(i=>i.getPaths().getArray().map(r=>r.getArray()))}createEventObservable(e,i){return new w.y(r=>{this._polygons.get(i).then(l=>{l.addListener(e,p=>this._zone.run(()=>r.next(p)))})})}createPathEventObservable(e){return A(this,void 0,void 0,function*(){const r=(yield this._polygons.get(e)).getPaths();return ue(r).pipe((0,re.O)({newArr:r.getArray()}),(0,K.w)(p=>(0,je.T)(...p.newArr.map((g,b)=>ue(g).pipe((0,Z.U)(d=>({parentMVEvent:p,chMVCEvent:d,pathIndex:b}))))).pipe((0,re.O)({parentMVEvent:p,chMVCEvent:null,pathIndex:null}))),(0,Ye.T)(1),(0,Z.U)(({parentMVEvent:p,chMVCEvent:g,pathIndex:b})=>{let d;return g?(d={newArr:p.newArr.map(c=>c.getArray().map(M=>M.toJSON())),pathIndex:b,eventName:g.evName,index:g.index},g.previous&&(d.previous=g.previous)):(d={newArr:p.newArr.map(c=>c.getArray().map(M=>M.toJSON())),eventName:p.evName,index:p.index},p.previous&&(d.previous=p.previous.getArray())),d}))})}};return o.\u0275fac=function(e){return new(e||o)(t.\u0275\u0275inject(O),t.\u0275\u0275inject(t.NgZone))},o.\u0275prov=t.\u0275\u0275defineInjectable({token:o,factory:function(n){return o.\u0275fac(n)}}),o=a([s("design:paramtypes",[O,t.NgZone])],o),o})();var W;let P=W=class{constructor(n,e){this._mapsWrapper=n,this._zone=e,this._polylines=new Map}static _convertPoints(n){return n._getPoints().map(i=>({lat:i.latitude,lng:i.longitude}))}static _convertPath(n){const e=google.maps.SymbolPath[n];return"number"==typeof e?e:n}static _convertIcons(n){const e=n._getIcons().map(i=>({fixedRotation:i.fixedRotation,offset:i.offset,repeat:i.repeat,icon:{anchor:new google.maps.Point(i.anchorX,i.anchorY),fillColor:i.fillColor,fillOpacity:i.fillOpacity,path:W._convertPath(i.path),rotation:i.rotation,scale:i.scale,strokeColor:i.strokeColor,strokeOpacity:i.strokeOpacity,strokeWeight:i.strokeWeight}}));return e.forEach(i=>{Object.entries(i).forEach(([r,l])=>{typeof l>"u"&&delete i[r]}),(typeof i.icon.anchor.x>"u"||typeof i.icon.anchor.y>"u")&&delete i.icon.anchor}),e}addPolyline(n){const e=this._mapsWrapper.getNativeMap().then(()=>[W._convertPoints(n),W._convertIcons(n)]).then(([i,r])=>this._mapsWrapper.createPolyline({clickable:n.clickable,draggable:n.draggable,editable:n.editable,geodesic:n.geodesic,strokeColor:n.strokeColor,strokeOpacity:n.strokeOpacity,strokeWeight:n.strokeWeight,visible:n.visible,zIndex:n.zIndex,path:i,icons:r}));this._polylines.set(n,e)}updatePolylinePoints(n){const e=W._convertPoints(n),i=this._polylines.get(n);return null==i?Promise.resolve():i.then(r=>this._zone.run(()=>{r.setPath(e)}))}updateIconSequences(n){return A(this,void 0,void 0,function*(){yield this._mapsWrapper.getNativeMap();const e=W._convertIcons(n),i=this._polylines.get(n);if(null!=i)return i.then(r=>this._zone.run(()=>r.setOptions({icons:e})))})}setPolylineOptions(n,e){return this._polylines.get(n).then(i=>{i.setOptions(e)})}deletePolyline(n){const e=this._polylines.get(n);return null==e?Promise.resolve():e.then(i=>this._zone.run(()=>{i.setMap(null),this._polylines.delete(n)}))}getMVCPath(n){return A(this,void 0,void 0,function*(){return(yield this._polylines.get(n)).getPath()})}getPath(n){return A(this,void 0,void 0,function*(){return(yield this.getMVCPath(n)).getArray()})}createEventObservable(n,e){return new w.y(i=>{this._polylines.get(e).then(r=>{r.addListener(n,l=>this._zone.run(()=>i.next(l)))})})}createPathEventObservable(n){return A(this,void 0,void 0,function*(){return ue(yield this.getMVCPath(n))})}};P.\u0275fac=function(n){return new(n||P)(t.\u0275\u0275inject(O),t.\u0275\u0275inject(t.NgZone))},P.\u0275prov=t.\u0275\u0275defineInjectable({token:P,factory:function(o){return P.\u0275fac(o)}}),P.ctorParameters=()=>[{type:O},{type:t.NgZone}],P=W=a([s("design:paramtypes",[O,t.NgZone])],P);let q=(()=>{let o=class{constructor(e,i){this._apiWrapper=e,this._zone=i,this._rectangles=new Map}addRectangle(e){this._rectangles.set(e,this._apiWrapper.createRectangle({bounds:{north:e.north,east:e.east,south:e.south,west:e.west},clickable:e.clickable,draggable:e.draggable,editable:e.editable,fillColor:e.fillColor,fillOpacity:e.fillOpacity,strokeColor:e.strokeColor,strokeOpacity:e.strokeOpacity,strokePosition:e.strokePosition,strokeWeight:e.strokeWeight,visible:e.visible,zIndex:e.zIndex}))}removeRectangle(e){return this._rectangles.get(e).then(i=>{i.setMap(null),this._rectangles.delete(e)})}setOptions(e,i){return this._rectangles.get(e).then(r=>r.setOptions(i))}getBounds(e){return this._rectangles.get(e).then(i=>i.getBounds())}setBounds(e){return this._rectangles.get(e).then(i=>i.setBounds({north:e.north,east:e.east,south:e.south,west:e.west}))}setEditable(e){return this._rectangles.get(e).then(i=>i.setEditable(e.editable))}setDraggable(e){return this._rectangles.get(e).then(i=>i.setDraggable(e.draggable))}setVisible(e){return this._rectangles.get(e).then(i=>i.setVisible(e.visible))}createEventObservable(e,i){return w.y.create(r=>{let l=null;return this._rectangles.get(i).then(p=>{l=p.addListener(e,g=>this._zone.run(()=>r.next(g)))}),()=>{null!==l&&l.remove()}})}};return o.\u0275fac=function(e){return new(e||o)(t.\u0275\u0275inject(O),t.\u0275\u0275inject(t.NgZone))},o.\u0275prov=t.\u0275\u0275defineInjectable({token:o,factory:function(n){return o.\u0275fac(n)}}),o=a([s("design:paramtypes",[O,t.NgZone])],o),o})();var de;let u=de=class{constructor(n,e,i,r,l){this._elem=n,this._mapsWrapper=e,this._platformId=i,this._fitBoundsService=r,this._zone=l,this.longitude=0,this.latitude=0,this.zoom=8,this.draggable=!0,this.disableDoubleClickZoom=!1,this.disableDefaultUI=!1,this.scrollwheel=!0,this.keyboardShortcuts=!0,this.styles=[],this.usePanning=!1,this.fitBounds=!1,this.scaleControl=!1,this.mapTypeControl=!1,this.panControl=!1,this.rotateControl=!1,this.fullscreenControl=!1,this.mapTypeId="roadmap",this.clickableIcons=!0,this.showDefaultInfoWindow=!0,this.gestureHandling="auto",this.tilt=0,this._observableSubscriptions=[],this.mapClick=new t.EventEmitter,this.mapRightClick=new t.EventEmitter,this.mapDblClick=new t.EventEmitter,this.centerChange=new t.EventEmitter,this.boundsChange=new t.EventEmitter,this.mapTypeIdChange=new t.EventEmitter,this.idle=new t.EventEmitter,this.zoomChange=new t.EventEmitter,this.mapReady=new t.EventEmitter,this.tilesLoaded=new t.EventEmitter}ngOnInit(){if((0,it.isPlatformServer)(this._platformId))return;const n=this._elem.nativeElement.querySelector(".agm-map-container-inner");this._initMapInstance(n)}_initMapInstance(n){this._mapsWrapper.createMap(n,{center:{lat:this.latitude||0,lng:this.longitude||0},zoom:this.zoom,minZoom:this.minZoom,maxZoom:this.maxZoom,controlSize:this.controlSize,disableDefaultUI:this.disableDefaultUI,disableDoubleClickZoom:this.disableDoubleClickZoom,scrollwheel:this.scrollwheel,backgroundColor:this.backgroundColor,draggable:this.draggable,draggableCursor:this.draggableCursor,draggingCursor:this.draggingCursor,keyboardShortcuts:this.keyboardShortcuts,styles:this.styles,zoomControl:this.zoomControl,zoomControlOptions:this.zoomControlOptions,streetViewControl:this.streetViewControl,streetViewControlOptions:this.streetViewControlOptions,scaleControl:this.scaleControl,scaleControlOptions:this.scaleControlOptions,mapTypeControl:this.mapTypeControl,mapTypeControlOptions:this.mapTypeControlOptions,panControl:this.panControl,panControlOptions:this.panControlOptions,rotateControl:this.rotateControl,rotateControlOptions:this.rotateControlOptions,fullscreenControl:this.fullscreenControl,fullscreenControlOptions:this.fullscreenControlOptions,mapTypeId:this.mapTypeId,clickableIcons:this.clickableIcons,gestureHandling:this.gestureHandling,tilt:this.tilt,restriction:this.restriction}).then(()=>this._mapsWrapper.getNativeMap()).then(e=>this.mapReady.emit(e)),this._handleMapCenterChange(),this._handleMapZoomChange(),this._handleMapMouseEvents(),this._handleBoundsChange(),this._handleMapTypeIdChange(),this._handleTilesLoadedEvent(),this._handleIdleEvent()}ngOnDestroy(){this._observableSubscriptions.forEach(n=>n.unsubscribe()),this._mapsWrapper.clearInstanceListeners(),this._fitBoundsSubscription&&this._fitBoundsSubscription.unsubscribe()}ngOnChanges(n){this._updateMapOptionsChanges(n),this._updatePosition(n)}_updateMapOptionsChanges(n){let e={};Object.keys(n).filter(r=>-1!==de._mapOptionsAttributes.indexOf(r)).forEach(r=>{e[r]=n[r].currentValue}),this._mapsWrapper.setMapOptions(e)}triggerResize(n=!0){return new Promise(e=>{setTimeout(()=>this._mapsWrapper.triggerMapEvent("resize").then(()=>{n&&(null!=this.fitBounds?this._fitBounds():this._setCenter()),e()}))})}_updatePosition(n){if(null!=n.latitude||null!=n.longitude||n.fitBounds){if("fitBounds"in n)return void this._fitBounds();"number"!=typeof this.latitude||"number"!=typeof this.longitude||this._setCenter()}}_setCenter(){let n={lat:this.latitude,lng:this.longitude};this.usePanning?this._mapsWrapper.panTo(n):this._mapsWrapper.setCenter(n)}_fitBounds(){switch(this.fitBounds){case!0:this._subscribeToFitBoundsUpdates();break;case!1:this._fitBoundsSubscription&&this._fitBoundsSubscription.unsubscribe();break;default:this._updateBounds(this.fitBounds,this.fitBoundsPadding)}}_subscribeToFitBoundsUpdates(){this._zone.runOutsideAngular(()=>{this._fitBoundsSubscription=this._fitBoundsService.getBounds$().subscribe(n=>{this._zone.run(()=>this._updateBounds(n,this.fitBoundsPadding))})})}_updateBounds(n,e){if(n){if(this._isLatLngBoundsLiteral(n)&&typeof google<"u"&&google&&google.maps&&google.maps.LatLngBounds){const i=new google.maps.LatLngBounds;i.union(n),n=i}if(this.usePanning)return void this._mapsWrapper.panToBounds(n,e);this._mapsWrapper.fitBounds(n,e)}}_isLatLngBoundsLiteral(n){return null!=n&&void 0===n.extend}_handleMapCenterChange(){const n=this._mapsWrapper.subscribeToMapEvent("center_changed").subscribe(()=>{this._mapsWrapper.getCenter().then(e=>{this.latitude=e.lat(),this.longitude=e.lng(),this.centerChange.emit({lat:this.latitude,lng:this.longitude})})});this._observableSubscriptions.push(n)}_handleBoundsChange(){const n=this._mapsWrapper.subscribeToMapEvent("bounds_changed").subscribe(()=>{this._mapsWrapper.getBounds().then(e=>{this.boundsChange.emit(e)})});this._observableSubscriptions.push(n)}_handleMapTypeIdChange(){const n=this._mapsWrapper.subscribeToMapEvent("maptypeid_changed").subscribe(()=>{this._mapsWrapper.getMapTypeId().then(e=>{this.mapTypeIdChange.emit(e)})});this._observableSubscriptions.push(n)}_handleMapZoomChange(){const n=this._mapsWrapper.subscribeToMapEvent("zoom_changed").subscribe(()=>{this._mapsWrapper.getZoom().then(e=>{this.zoom=e,this.zoomChange.emit(e)})});this._observableSubscriptions.push(n)}_handleIdleEvent(){const n=this._mapsWrapper.subscribeToMapEvent("idle").subscribe(()=>{this.idle.emit(void 0)});this._observableSubscriptions.push(n)}_handleTilesLoadedEvent(){const n=this._mapsWrapper.subscribeToMapEvent("tilesloaded").subscribe(()=>this.tilesLoaded.emit(void 0));this._observableSubscriptions.push(n)}_handleMapMouseEvents(){[{name:"click",emitter:this.mapClick},{name:"rightclick",emitter:this.mapRightClick},{name:"dblclick",emitter:this.mapDblClick}].forEach(e=>{const i=this._mapsWrapper.subscribeToMapEvent(e.name).subscribe(r=>{let l={coords:{lat:r.latLng.lat(),lng:r.latLng.lng()},placeId:r.placeId};l.placeId&&!this.showDefaultInfoWindow&&r.stop(),e.emitter.emit(l)});this._observableSubscriptions.push(i)})}};var ge;u.\u0275fac=function(n){return new(n||u)(t.\u0275\u0275directiveInject(t.ElementRef),t.\u0275\u0275directiveInject(O),t.\u0275\u0275directiveInject(t.PLATFORM_ID),t.\u0275\u0275directiveInject(B),t.\u0275\u0275directiveInject(t.NgZone))},u.\u0275cmp=t.\u0275\u0275defineComponent({type:u,selectors:[["agm-map"]],hostVars:2,hostBindings:function(n,e){2&n&&t.\u0275\u0275classProp("sebm-google-map-container",!0)},inputs:{longitude:"longitude",latitude:"latitude",zoom:"zoom",draggable:["mapDraggable","draggable"],disableDoubleClickZoom:"disableDoubleClickZoom",disableDefaultUI:"disableDefaultUI",scrollwheel:"scrollwheel",keyboardShortcuts:"keyboardShortcuts",styles:"styles",usePanning:"usePanning",fitBounds:"fitBounds",scaleControl:"scaleControl",mapTypeControl:"mapTypeControl",panControl:"panControl",rotateControl:"rotateControl",fullscreenControl:"fullscreenControl",mapTypeId:"mapTypeId",clickableIcons:"clickableIcons",showDefaultInfoWindow:"showDefaultInfoWindow",gestureHandling:"gestureHandling",tilt:"tilt",minZoom:"minZoom",maxZoom:"maxZoom",controlSize:"controlSize",backgroundColor:"backgroundColor",draggableCursor:"draggableCursor",draggingCursor:"draggingCursor",zoomControl:"zoomControl",zoomControlOptions:"zoomControlOptions",streetViewControl:"streetViewControl",streetViewControlOptions:"streetViewControlOptions",fitBoundsPadding:"fitBoundsPadding",scaleControlOptions:"scaleControlOptions",mapTypeControlOptions:"mapTypeControlOptions",panControlOptions:"panControlOptions",rotateControlOptions:"rotateControlOptions",fullscreenControlOptions:"fullscreenControlOptions",restriction:"restriction"},outputs:{mapClick:"mapClick",mapRightClick:"mapRightClick",mapDblClick:"mapDblClick",centerChange:"centerChange",boundsChange:"boundsChange",mapTypeIdChange:"mapTypeIdChange",idle:"idle",zoomChange:"zoomChange",mapReady:"mapReady",tilesLoaded:"tilesLoaded"},features:[t.\u0275\u0275ProvidersFeature([H,V,V,B,O,J,Y,U,N,X,P,q]),t.\u0275\u0275NgOnChangesFeature],ngContentSelectors:Te,decls:3,vars:0,consts:[[1,"agm-map-container-inner","sebm-google-map-container-inner"],[1,"agm-map-content"]],template:function(n,e){1&n&&(t.\u0275\u0275projectionDef(),t.\u0275\u0275element(0,"div",0),t.\u0275\u0275elementStart(1,"div",1),t.\u0275\u0275projection(2),t.\u0275\u0275elementEnd())},styles:[".agm-map-container-inner[_ngcontent-%COMP%] {\n      width: inherit;\n      height: inherit;\n    }\n    .agm-map-content[_ngcontent-%COMP%] {\n      display:none;\n    }"]}),u._mapOptionsAttributes=["disableDoubleClickZoom","scrollwheel","draggable","draggableCursor","draggingCursor","keyboardShortcuts","zoomControl","zoomControlOptions","styles","streetViewControl","streetViewControlOptions","zoom","mapTypeControl","mapTypeControlOptions","minZoom","maxZoom","panControl","panControlOptions","rotateControl","rotateControlOptions","fullscreenControl","fullscreenControlOptions","scaleControl","scaleControlOptions","mapTypeId","clickableIcons","gestureHandling","tilt","restriction"],u.ctorParameters=()=>[{type:t.ElementRef},{type:O},{type:Object,decorators:[{type:t.Inject,args:[t.PLATFORM_ID]}]},{type:B},{type:t.NgZone}],a([(0,t.Input)(),s("design:type",Object)],u.prototype,"longitude",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"latitude",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"zoom",void 0),a([(0,t.Input)(),s("design:type",Number)],u.prototype,"minZoom",void 0),a([(0,t.Input)(),s("design:type",Number)],u.prototype,"maxZoom",void 0),a([(0,t.Input)(),s("design:type",Number)],u.prototype,"controlSize",void 0),a([(0,t.Input)("mapDraggable"),s("design:type",Object)],u.prototype,"draggable",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"disableDoubleClickZoom",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"disableDefaultUI",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"scrollwheel",void 0),a([(0,t.Input)(),s("design:type",String)],u.prototype,"backgroundColor",void 0),a([(0,t.Input)(),s("design:type",String)],u.prototype,"draggableCursor",void 0),a([(0,t.Input)(),s("design:type",String)],u.prototype,"draggingCursor",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"keyboardShortcuts",void 0),a([(0,t.Input)(),s("design:type",Boolean)],u.prototype,"zoomControl",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"zoomControlOptions",void 0),a([(0,t.Input)(),s("design:type",Array)],u.prototype,"styles",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"usePanning",void 0),a([(0,t.Input)(),s("design:type",Boolean)],u.prototype,"streetViewControl",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"streetViewControlOptions",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"fitBounds",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"fitBoundsPadding",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"scaleControl",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"scaleControlOptions",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"mapTypeControl",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"mapTypeControlOptions",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"panControl",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"panControlOptions",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"rotateControl",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"rotateControlOptions",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"fullscreenControl",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"fullscreenControlOptions",void 0),a([(0,t.Input)(),s("design:type",String)],u.prototype,"mapTypeId",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"clickableIcons",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"showDefaultInfoWindow",void 0),a([(0,t.Input)(),s("design:type",String)],u.prototype,"gestureHandling",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"tilt",void 0),a([(0,t.Input)(),s("design:type",Object)],u.prototype,"restriction",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],u.prototype,"mapClick",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],u.prototype,"mapRightClick",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],u.prototype,"mapDblClick",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],u.prototype,"centerChange",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],u.prototype,"boundsChange",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],u.prototype,"mapTypeIdChange",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],u.prototype,"idle",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],u.prototype,"zoomChange",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],u.prototype,"mapReady",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],u.prototype,"tilesLoaded",void 0),u=de=a([L(2,(0,t.Inject)(t.PLATFORM_ID)),s("design:paramtypes",[t.ElementRef,O,Object,B,t.NgZone])],u);let ut=0,_=ge=class{constructor(n){this._markerManager=n,this.draggable=!1,this.visible=!0,this.openInfoWindow=!0,this.opacity=1,this.zIndex=1,this.clickable=!0,this.animationChange=new t.EventEmitter,this.markerClick=new t.EventEmitter,this.markerDblClick=new t.EventEmitter,this.markerRightClick=new t.EventEmitter,this.dragStart=new t.EventEmitter,this.drag=new t.EventEmitter,this.dragEnd=new t.EventEmitter,this.mouseOver=new t.EventEmitter,this.mouseOut=new t.EventEmitter,this.infoWindow=new t.QueryList,this._markerAddedToManger=!1,this._observableSubscriptions=[],this._fitBoundsDetails$=new Pe.t(1),this._id=(ut++).toString()}ngAfterContentInit(){this.handleInfoWindowUpdate(),this.infoWindow.changes.subscribe(()=>this.handleInfoWindowUpdate())}handleInfoWindowUpdate(){if(this.infoWindow.length>1)throw new Error("Expected no more than one info window.");this.infoWindow.forEach(n=>{n.hostMarker=this})}ngOnChanges(n){if("string"==typeof this.latitude&&(this.latitude=Number(this.latitude)),"string"==typeof this.longitude&&(this.longitude=Number(this.longitude)),"number"==typeof this.latitude&&"number"==typeof this.longitude){if(!this._markerAddedToManger)return this._markerManager.addMarker(this),this._updateFitBoundsDetails(),this._markerAddedToManger=!0,void this._addEventListeners();(n.latitude||n.longitude)&&(this._markerManager.updateMarkerPosition(this),this._updateFitBoundsDetails()),n.title&&this._markerManager.updateTitle(this),n.label&&this._markerManager.updateLabel(this),n.draggable&&this._markerManager.updateDraggable(this),n.iconUrl&&this._markerManager.updateIcon(this),n.opacity&&this._markerManager.updateOpacity(this),n.visible&&this._markerManager.updateVisible(this),n.zIndex&&this._markerManager.updateZIndex(this),n.clickable&&this._markerManager.updateClickable(this),n.animation&&this._markerManager.updateAnimation(this)}}getFitBoundsDetails$(){return this._fitBoundsDetails$.asObservable()}_updateFitBoundsDetails(){this._fitBoundsDetails$.next({latLng:{lat:this.latitude,lng:this.longitude}})}_addEventListeners(){const n=this._markerManager.createEventObservable("click",this).subscribe(()=>{this.openInfoWindow&&this.infoWindow.forEach(c=>c.open()),this.markerClick.emit(this)});this._observableSubscriptions.push(n);const e=this._markerManager.createEventObservable("dblclick",this).subscribe(()=>{this.markerDblClick.emit(null)});this._observableSubscriptions.push(e);const i=this._markerManager.createEventObservable("rightclick",this).subscribe(()=>{this.markerRightClick.emit(null)});this._observableSubscriptions.push(i);const r=this._markerManager.createEventObservable("dragstart",this).subscribe(c=>{this.dragStart.emit({coords:{lat:c.latLng.lat(),lng:c.latLng.lng()}})});this._observableSubscriptions.push(r);const l=this._markerManager.createEventObservable("drag",this).subscribe(c=>{this.drag.emit({coords:{lat:c.latLng.lat(),lng:c.latLng.lng()}})});this._observableSubscriptions.push(l);const p=this._markerManager.createEventObservable("dragend",this).subscribe(c=>{this.dragEnd.emit({coords:{lat:c.latLng.lat(),lng:c.latLng.lng()}})});this._observableSubscriptions.push(p);const g=this._markerManager.createEventObservable("mouseover",this).subscribe(c=>{this.mouseOver.emit({coords:{lat:c.latLng.lat(),lng:c.latLng.lng()}})});this._observableSubscriptions.push(g);const b=this._markerManager.createEventObservable("mouseout",this).subscribe(c=>{this.mouseOut.emit({coords:{lat:c.latLng.lat(),lng:c.latLng.lng()}})});this._observableSubscriptions.push(b);const d=this._markerManager.createEventObservable("animation_changed",this).subscribe(()=>{this.animationChange.emit(this.animation)});this._observableSubscriptions.push(d)}id(){return this._id}toString(){return"AgmMarker-"+this._id.toString()}ngOnDestroy(){this._markerManager.deleteMarker(this),this._observableSubscriptions.forEach(n=>n.unsubscribe())}};var ce;_.\u0275fac=function(n){return new(n||_)(t.\u0275\u0275directiveInject(N))},_.\u0275dir=t.\u0275\u0275defineDirective({type:_,selectors:[["agm-marker"]],contentQueries:function(n,e,i){if(1&n&&t.\u0275\u0275contentQuery(i,E,4),2&n){let r;t.\u0275\u0275queryRefresh(r=t.\u0275\u0275loadQuery())&&(e.infoWindow=r)}},inputs:{latitude:"latitude",longitude:"longitude",title:"title",label:"label",draggable:["markerDraggable","draggable"],iconUrl:"iconUrl",openInfoWindow:"openInfoWindow",opacity:"opacity",visible:"visible",zIndex:"zIndex",animation:"animation",clickable:["markerClickable","clickable"]},outputs:{markerClick:"markerClick",dragStart:"dragStart",drag:"drag",dragEnd:"dragEnd",mouseOver:"mouseOver",mouseOut:"mouseOut",animationChange:"animationChange",markerDblClick:"markerDblClick",markerRightClick:"markerRightClick"},features:[t.\u0275\u0275ProvidersFeature([{provide:Q,useExisting:(0,t.forwardRef)(()=>ge)}]),t.\u0275\u0275NgOnChangesFeature]}),_.ctorParameters=()=>[{type:N}],a([(0,t.Input)(),s("design:type",Number)],_.prototype,"latitude",void 0),a([(0,t.Input)(),s("design:type",Number)],_.prototype,"longitude",void 0),a([(0,t.Input)(),s("design:type",String)],_.prototype,"title",void 0),a([(0,t.Input)(),s("design:type",Object)],_.prototype,"label",void 0),a([(0,t.Input)("markerDraggable"),s("design:type",Object)],_.prototype,"draggable",void 0),a([(0,t.Input)(),s("design:type",String)],_.prototype,"iconUrl",void 0),a([(0,t.Input)(),s("design:type",Object)],_.prototype,"visible",void 0),a([(0,t.Input)(),s("design:type",Object)],_.prototype,"openInfoWindow",void 0),a([(0,t.Input)(),s("design:type",Object)],_.prototype,"opacity",void 0),a([(0,t.Input)(),s("design:type",Object)],_.prototype,"zIndex",void 0),a([(0,t.Input)("markerClickable"),s("design:type",Object)],_.prototype,"clickable",void 0),a([(0,t.Input)(),s("design:type",String)],_.prototype,"animation",void 0),a([(0,t.Output)(),s("design:type",Object)],_.prototype,"animationChange",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],_.prototype,"markerClick",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],_.prototype,"markerDblClick",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],_.prototype,"markerRightClick",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],_.prototype,"dragStart",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],_.prototype,"drag",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],_.prototype,"dragEnd",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],_.prototype,"mouseOver",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],_.prototype,"mouseOut",void 0),a([(0,t.ContentChildren)(E),s("design:type",t.QueryList)],_.prototype,"infoWindow",void 0),_=ge=a([s("design:paramtypes",[N])],_);let v=ce=class{constructor(n){this._polygonManager=n,this.clickable=!0,this.draggable=!1,this.editable=!1,this.geodesic=!1,this.paths=[],this.polyClick=new t.EventEmitter,this.polyDblClick=new t.EventEmitter,this.polyDrag=new t.EventEmitter,this.polyDragEnd=new t.EventEmitter,this.polyDragStart=new t.EventEmitter,this.polyMouseDown=new t.EventEmitter,this.polyMouseMove=new t.EventEmitter,this.polyMouseOut=new t.EventEmitter,this.polyMouseOver=new t.EventEmitter,this.polyMouseUp=new t.EventEmitter,this.polyRightClick=new t.EventEmitter,this.polyPathsChange=new t.EventEmitter,this._polygonAddedToManager=!1,this._subscriptions=[]}ngAfterContentInit(){this._polygonAddedToManager||this._init()}ngOnChanges(n){this._polygonAddedToManager?this._polygonManager.setPolygonOptions(this,this._updatePolygonOptions(n)):this._init()}_init(){this._polygonManager.addPolygon(this),this._polygonAddedToManager=!0,this._addEventListeners()}_addEventListeners(){[{name:"click",handler:e=>this.polyClick.emit(e)},{name:"dblclick",handler:e=>this.polyDblClick.emit(e)},{name:"drag",handler:e=>this.polyDrag.emit(e)},{name:"dragend",handler:e=>this.polyDragEnd.emit(e)},{name:"dragstart",handler:e=>this.polyDragStart.emit(e)},{name:"mousedown",handler:e=>this.polyMouseDown.emit(e)},{name:"mousemove",handler:e=>this.polyMouseMove.emit(e)},{name:"mouseout",handler:e=>this.polyMouseOut.emit(e)},{name:"mouseover",handler:e=>this.polyMouseOver.emit(e)},{name:"mouseup",handler:e=>this.polyMouseUp.emit(e)},{name:"rightclick",handler:e=>this.polyRightClick.emit(e)}].forEach(e=>{const i=this._polygonManager.createEventObservable(e.name,this).subscribe(e.handler);this._subscriptions.push(i)}),this._polygonManager.createPathEventObservable(this).then(e=>{const i=e.subscribe(r=>this.polyPathsChange.emit(r));this._subscriptions.push(i)})}_updatePolygonOptions(n){return Object.keys(n).filter(e=>-1!==ce._polygonOptionsAttributes.indexOf(e)).reduce((e,i)=>(e[i]=n[i].currentValue,e),{})}id(){return this._id}ngOnDestroy(){this._polygonManager.deletePolygon(this),this._subscriptions.forEach(n=>n.unsubscribe())}getPath(){return this._polygonManager.getPath(this)}getPaths(){return this._polygonManager.getPaths(this)}};v.\u0275fac=function(n){return new(n||v)(t.\u0275\u0275directiveInject(X))},v.\u0275dir=t.\u0275\u0275defineDirective({type:v,selectors:[["agm-polygon"]],inputs:{clickable:"clickable",draggable:["polyDraggable","draggable"],editable:"editable",geodesic:"geodesic",paths:"paths",fillColor:"fillColor",fillOpacity:"fillOpacity",strokeColor:"strokeColor",strokeOpacity:"strokeOpacity",strokeWeight:"strokeWeight",visible:"visible",zIndex:"zIndex"},outputs:{polyClick:"polyClick",polyDblClick:"polyDblClick",polyDrag:"polyDrag",polyDragEnd:"polyDragEnd",polyDragStart:"polyDragStart",polyMouseDown:"polyMouseDown",polyMouseMove:"polyMouseMove",polyMouseOut:"polyMouseOut",polyMouseOver:"polyMouseOver",polyMouseUp:"polyMouseUp",polyRightClick:"polyRightClick",polyPathsChange:"polyPathsChange"},features:[t.\u0275\u0275NgOnChangesFeature]}),v._polygonOptionsAttributes=["clickable","draggable","editable","fillColor","fillOpacity","geodesic","icon","map","paths","strokeColor","strokeOpacity","strokeWeight","visible","zIndex","draggable","editable","visible"],v.ctorParameters=()=>[{type:X}],a([(0,t.Input)(),s("design:type",Object)],v.prototype,"clickable",void 0),a([(0,t.Input)("polyDraggable"),s("design:type",Object)],v.prototype,"draggable",void 0),a([(0,t.Input)(),s("design:type",Object)],v.prototype,"editable",void 0),a([(0,t.Input)(),s("design:type",String)],v.prototype,"fillColor",void 0),a([(0,t.Input)(),s("design:type",Number)],v.prototype,"fillOpacity",void 0),a([(0,t.Input)(),s("design:type",Object)],v.prototype,"geodesic",void 0),a([(0,t.Input)(),s("design:type",Array)],v.prototype,"paths",void 0),a([(0,t.Input)(),s("design:type",String)],v.prototype,"strokeColor",void 0),a([(0,t.Input)(),s("design:type",Number)],v.prototype,"strokeOpacity",void 0),a([(0,t.Input)(),s("design:type",Number)],v.prototype,"strokeWeight",void 0),a([(0,t.Input)(),s("design:type",Boolean)],v.prototype,"visible",void 0),a([(0,t.Input)(),s("design:type",Number)],v.prototype,"zIndex",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],v.prototype,"polyClick",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],v.prototype,"polyDblClick",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],v.prototype,"polyDrag",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],v.prototype,"polyDragEnd",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],v.prototype,"polyDragStart",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],v.prototype,"polyMouseDown",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],v.prototype,"polyMouseMove",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],v.prototype,"polyMouseOut",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],v.prototype,"polyMouseOver",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],v.prototype,"polyMouseUp",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],v.prototype,"polyRightClick",void 0),a([(0,t.Output)(),s("design:type",Object)],v.prototype,"polyPathsChange",void 0),v=ce=a([s("design:paramtypes",[X])],v);let he=(()=>{let o=class{ngOnInit(){if(null==this.path)throw new Error("Icon Sequence path is required")}};return o.\u0275fac=function(e){return new(e||o)},o.\u0275dir=t.\u0275\u0275defineDirective({type:o,selectors:[["agm-icon-sequence"]],inputs:{fixedRotation:"fixedRotation",offset:"offset",repeat:"repeat",anchorX:"anchorX",anchorY:"anchorY",fillColor:"fillColor",fillOpacity:"fillOpacity",path:"path",rotation:"rotation",scale:"scale",strokeColor:"strokeColor",strokeOpacity:"strokeOpacity",strokeWeight:"strokeWeight"}}),a([(0,t.Input)(),s("design:type",Boolean)],o.prototype,"fixedRotation",void 0),a([(0,t.Input)(),s("design:type",String)],o.prototype,"offset",void 0),a([(0,t.Input)(),s("design:type",String)],o.prototype,"repeat",void 0),a([(0,t.Input)(),s("design:type",Number)],o.prototype,"anchorX",void 0),a([(0,t.Input)(),s("design:type",Number)],o.prototype,"anchorY",void 0),a([(0,t.Input)(),s("design:type",String)],o.prototype,"fillColor",void 0),a([(0,t.Input)(),s("design:type",Number)],o.prototype,"fillOpacity",void 0),a([(0,t.Input)(),s("design:type",String)],o.prototype,"path",void 0),a([(0,t.Input)(),s("design:type",Number)],o.prototype,"rotation",void 0),a([(0,t.Input)(),s("design:type",Number)],o.prototype,"scale",void 0),a([(0,t.Input)(),s("design:type",String)],o.prototype,"strokeColor",void 0),a([(0,t.Input)(),s("design:type",Number)],o.prototype,"strokeOpacity",void 0),a([(0,t.Input)(),s("design:type",Number)],o.prototype,"strokeWeight",void 0),o})();var ye;let D=ye=class{constructor(){this.positionChanged=new t.EventEmitter}ngOnChanges(n){(n.latitude||n.longitude)&&this.positionChanged.emit({lat:n.latitude?n.latitude.currentValue:this.latitude,lng:n.longitude?n.longitude.currentValue:this.longitude})}getFitBoundsDetails$(){return this.positionChanged.pipe((0,re.O)({lat:this.latitude,lng:this.longitude}),(0,Z.U)(n=>({latLng:n})))}};var me;D.\u0275fac=function(n){return new(n||D)},D.\u0275dir=t.\u0275\u0275defineDirective({type:D,selectors:[["agm-polyline-point"]],inputs:{latitude:"latitude",longitude:"longitude"},outputs:{positionChanged:"positionChanged"},features:[t.\u0275\u0275ProvidersFeature([{provide:Q,useExisting:(0,t.forwardRef)(()=>ye)}]),t.\u0275\u0275NgOnChangesFeature]}),a([(0,t.Input)(),s("design:type",Number)],D.prototype,"latitude",void 0),a([(0,t.Input)(),s("design:type",Number)],D.prototype,"longitude",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],D.prototype,"positionChanged",void 0),D=ye=a([s("design:paramtypes",[])],D);let dt=0,f=me=class{constructor(n){this._polylineManager=n,this.clickable=!0,this.draggable=!1,this.editable=!1,this.geodesic=!1,this.visible=!0,this.lineClick=new t.EventEmitter,this.lineDblClick=new t.EventEmitter,this.lineDrag=new t.EventEmitter,this.lineDragEnd=new t.EventEmitter,this.lineDragStart=new t.EventEmitter,this.lineMouseDown=new t.EventEmitter,this.lineMouseMove=new t.EventEmitter,this.lineMouseOut=new t.EventEmitter,this.lineMouseOver=new t.EventEmitter,this.lineMouseUp=new t.EventEmitter,this.lineRightClick=new t.EventEmitter,this.polyPathChange=new t.EventEmitter,this._polylineAddedToManager=!1,this._subscriptions=[],this._id=(dt++).toString()}ngAfterContentInit(){this.points.length&&this.points.forEach(i=>{const r=i.positionChanged.subscribe(()=>{this._polylineManager.updatePolylinePoints(this)});this._subscriptions.push(r)}),this._polylineAddedToManager||this._init();const n=this.points.changes.subscribe(()=>this._polylineManager.updatePolylinePoints(this));this._subscriptions.push(n),this._polylineManager.updatePolylinePoints(this);const e=this.iconSequences.changes.subscribe(()=>this._polylineManager.updateIconSequences(this));this._subscriptions.push(e)}ngOnChanges(n){if(!this._polylineAddedToManager)return void this._init();let e={};Object.keys(n).filter(r=>-1!==me._polylineOptionsAttributes.indexOf(r)).forEach(r=>e[r]=n[r].currentValue),this._polylineManager.setPolylineOptions(this,e)}getPath(){return this._polylineManager.getPath(this)}_init(){this._polylineManager.addPolyline(this),this._polylineAddedToManager=!0,this._addEventListeners()}_addEventListeners(){[{name:"click",handler:e=>this.lineClick.emit(e)},{name:"dblclick",handler:e=>this.lineDblClick.emit(e)},{name:"drag",handler:e=>this.lineDrag.emit(e)},{name:"dragend",handler:e=>this.lineDragEnd.emit(e)},{name:"dragstart",handler:e=>this.lineDragStart.emit(e)},{name:"mousedown",handler:e=>this.lineMouseDown.emit(e)},{name:"mousemove",handler:e=>this.lineMouseMove.emit(e)},{name:"mouseout",handler:e=>this.lineMouseOut.emit(e)},{name:"mouseover",handler:e=>this.lineMouseOver.emit(e)},{name:"mouseup",handler:e=>this.lineMouseUp.emit(e)},{name:"rightclick",handler:e=>this.lineRightClick.emit(e)}].forEach(e=>{const i=this._polylineManager.createEventObservable(e.name,this).subscribe(e.handler);this._subscriptions.push(i)}),this._polylineManager.createPathEventObservable(this).then(e=>{const i=e.subscribe(r=>this.polyPathChange.emit(r));this._subscriptions.push(i)})}_getPoints(){return this.points?this.points.toArray():[]}_getIcons(){return this.iconSequences?this.iconSequences.toArray():[]}id(){return this._id}ngOnDestroy(){this._polylineManager.deletePolyline(this),this._subscriptions.forEach(n=>n.unsubscribe())}};var ve;f.\u0275fac=function(n){return new(n||f)(t.\u0275\u0275directiveInject(P))},f.\u0275dir=t.\u0275\u0275defineDirective({type:f,selectors:[["agm-polyline"]],contentQueries:function(n,e,i){if(1&n&&(t.\u0275\u0275contentQuery(i,D,4),t.\u0275\u0275contentQuery(i,he,4)),2&n){let r;t.\u0275\u0275queryRefresh(r=t.\u0275\u0275loadQuery())&&(e.points=r),t.\u0275\u0275queryRefresh(r=t.\u0275\u0275loadQuery())&&(e.iconSequences=r)}},inputs:{clickable:"clickable",draggable:["polylineDraggable","draggable"],editable:"editable",geodesic:"geodesic",visible:"visible",strokeColor:"strokeColor",strokeOpacity:"strokeOpacity",strokeWeight:"strokeWeight",zIndex:"zIndex"},outputs:{lineClick:"lineClick",lineDblClick:"lineDblClick",lineDrag:"lineDrag",lineDragEnd:"lineDragEnd",lineDragStart:"lineDragStart",lineMouseDown:"lineMouseDown",lineMouseMove:"lineMouseMove",lineMouseOut:"lineMouseOut",lineMouseOver:"lineMouseOver",lineMouseUp:"lineMouseUp",lineRightClick:"lineRightClick",polyPathChange:"polyPathChange"},features:[t.\u0275\u0275NgOnChangesFeature]}),f._polylineOptionsAttributes=["draggable","editable","visible","geodesic","strokeColor","strokeOpacity","strokeWeight","zIndex"],f.ctorParameters=()=>[{type:P}],a([(0,t.Input)(),s("design:type",Object)],f.prototype,"clickable",void 0),a([(0,t.Input)("polylineDraggable"),s("design:type",Object)],f.prototype,"draggable",void 0),a([(0,t.Input)(),s("design:type",Object)],f.prototype,"editable",void 0),a([(0,t.Input)(),s("design:type",Object)],f.prototype,"geodesic",void 0),a([(0,t.Input)(),s("design:type",String)],f.prototype,"strokeColor",void 0),a([(0,t.Input)(),s("design:type",Number)],f.prototype,"strokeOpacity",void 0),a([(0,t.Input)(),s("design:type",Number)],f.prototype,"strokeWeight",void 0),a([(0,t.Input)(),s("design:type",Object)],f.prototype,"visible",void 0),a([(0,t.Input)(),s("design:type",Number)],f.prototype,"zIndex",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],f.prototype,"lineClick",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],f.prototype,"lineDblClick",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],f.prototype,"lineDrag",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],f.prototype,"lineDragEnd",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],f.prototype,"lineDragStart",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],f.prototype,"lineMouseDown",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],f.prototype,"lineMouseMove",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],f.prototype,"lineMouseOut",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],f.prototype,"lineMouseOver",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],f.prototype,"lineMouseUp",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],f.prototype,"lineRightClick",void 0),a([(0,t.Output)(),s("design:type",Object)],f.prototype,"polyPathChange",void 0),a([(0,t.ContentChildren)(D),s("design:type",t.QueryList)],f.prototype,"points",void 0),a([(0,t.ContentChildren)(he),s("design:type",t.QueryList)],f.prototype,"iconSequences",void 0),f=me=a([s("design:paramtypes",[P])],f);let y=ve=class{constructor(n){this._manager=n,this.clickable=!0,this.draggable=!1,this.editable=!1,this.strokePosition="CENTER",this.strokeWeight=0,this.visible=!0,this.boundsChange=new t.EventEmitter,this.rectangleClick=new t.EventEmitter,this.rectangleDblClick=new t.EventEmitter,this.drag=new t.EventEmitter,this.dragEnd=new t.EventEmitter,this.dragStart=new t.EventEmitter,this.mouseDown=new t.EventEmitter,this.mouseMove=new t.EventEmitter,this.mouseOut=new t.EventEmitter,this.mouseOver=new t.EventEmitter,this.mouseUp=new t.EventEmitter,this.rightClick=new t.EventEmitter,this._rectangleAddedToManager=!1,this._eventSubscriptions=[]}ngOnInit(){this._manager.addRectangle(this),this._rectangleAddedToManager=!0,this._registerEventListeners()}ngOnChanges(n){this._rectangleAddedToManager&&((n.north||n.east||n.south||n.west)&&this._manager.setBounds(this),n.editable&&this._manager.setEditable(this),n.draggable&&this._manager.setDraggable(this),n.visible&&this._manager.setVisible(this),this._updateRectangleOptionsChanges(n))}_updateRectangleOptionsChanges(n){let e={},i=Object.keys(n).filter(r=>-1!==ve._mapOptions.indexOf(r));i.forEach(r=>{e[r]=n[r].currentValue}),i.length>0&&this._manager.setOptions(this,e)}_registerEventListeners(){let n=new Map;n.set("bounds_changed",this.boundsChange),n.set("click",this.rectangleClick),n.set("dblclick",this.rectangleDblClick),n.set("drag",this.drag),n.set("dragend",this.dragEnd),n.set("dragStart",this.dragStart),n.set("mousedown",this.mouseDown),n.set("mousemove",this.mouseMove),n.set("mouseout",this.mouseOut),n.set("mouseover",this.mouseOver),n.set("mouseup",this.mouseUp),n.set("rightclick",this.rightClick),n.forEach((e,i)=>{this._eventSubscriptions.push(this._manager.createEventObservable(i,this).subscribe(r=>{"bounds_changed"===i?this._manager.getBounds(this).then(l=>e.emit({north:l.getNorthEast().lat(),east:l.getNorthEast().lng(),south:l.getSouthWest().lat(),west:l.getSouthWest().lng()})):e.emit({coords:{lat:r.latLng.lat(),lng:r.latLng.lng()}})}))})}ngOnDestroy(){this._eventSubscriptions.forEach(function(n){n.unsubscribe()}),this._eventSubscriptions=null,this._manager.removeRectangle(this)}getBounds(){return this._manager.getBounds(this)}};y.\u0275fac=function(n){return new(n||y)(t.\u0275\u0275directiveInject(q))},y.\u0275dir=t.\u0275\u0275defineDirective({type:y,selectors:[["agm-rectangle"]],inputs:{clickable:"clickable",draggable:["rectangleDraggable","draggable"],editable:"editable",strokePosition:"strokePosition",strokeWeight:"strokeWeight",visible:"visible",north:"north",east:"east",south:"south",west:"west",fillColor:"fillColor",fillOpacity:"fillOpacity",strokeColor:"strokeColor",strokeOpacity:"strokeOpacity",zIndex:"zIndex"},outputs:{boundsChange:"boundsChange",rectangleClick:"rectangleClick",rectangleDblClick:"rectangleDblClick",drag:"drag",dragEnd:"dragEnd",dragStart:"dragStart",mouseDown:"mouseDown",mouseMove:"mouseMove",mouseOut:"mouseOut",mouseOver:"mouseOver",mouseUp:"mouseUp",rightClick:"rightClick"},features:[t.\u0275\u0275NgOnChangesFeature]}),y._mapOptions=["fillColor","fillOpacity","strokeColor","strokeOpacity","strokePosition","strokeWeight","visible","zIndex","clickable"],y.ctorParameters=()=>[{type:q}],a([(0,t.Input)(),s("design:type",Number)],y.prototype,"north",void 0),a([(0,t.Input)(),s("design:type",Number)],y.prototype,"east",void 0),a([(0,t.Input)(),s("design:type",Number)],y.prototype,"south",void 0),a([(0,t.Input)(),s("design:type",Number)],y.prototype,"west",void 0),a([(0,t.Input)(),s("design:type",Object)],y.prototype,"clickable",void 0),a([(0,t.Input)("rectangleDraggable"),s("design:type",Object)],y.prototype,"draggable",void 0),a([(0,t.Input)(),s("design:type",Object)],y.prototype,"editable",void 0),a([(0,t.Input)(),s("design:type",String)],y.prototype,"fillColor",void 0),a([(0,t.Input)(),s("design:type",Number)],y.prototype,"fillOpacity",void 0),a([(0,t.Input)(),s("design:type",String)],y.prototype,"strokeColor",void 0),a([(0,t.Input)(),s("design:type",Number)],y.prototype,"strokeOpacity",void 0),a([(0,t.Input)(),s("design:type",String)],y.prototype,"strokePosition",void 0),a([(0,t.Input)(),s("design:type",Object)],y.prototype,"strokeWeight",void 0),a([(0,t.Input)(),s("design:type",Object)],y.prototype,"visible",void 0),a([(0,t.Input)(),s("design:type",Number)],y.prototype,"zIndex",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],y.prototype,"boundsChange",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],y.prototype,"rectangleClick",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],y.prototype,"rectangleDblClick",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],y.prototype,"drag",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],y.prototype,"dragEnd",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],y.prototype,"dragStart",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],y.prototype,"mouseDown",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],y.prototype,"mouseMove",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],y.prototype,"mouseOut",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],y.prototype,"mouseOver",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],y.prototype,"mouseUp",void 0),a([(0,t.Output)(),s("design:type",t.EventEmitter)],y.prototype,"rightClick",void 0),y=ve=a([s("design:paramtypes",[q])],y);var ee=(()=>{return(o=ee||(ee={})).ERROR="ERROR",o.INVALID_REQUEST="INVALID_REQUEST",o.OK="OK",o.OVER_QUERY_LIMIT="OVER_QUERY_LIMIT",o.REQUEST_DENIED="REQUEST_DENIED",o.UNKNOWN_ERROR="UNKNOWN_ERROR",o.ZERO_RESULTS="ZERO_RESULTS",ee;var o})();let T=class{constructor(n){const e=new w.y(i=>{n.load().then(()=>i.next())}).pipe((0,Z.U)(()=>this._createGeocoder()),function nt(o,n){const e=(0,ie.m)(o)?o:()=>o;return(0,ie.m)(n)?function tt(o,n=et){const{connector:e}=n;return(0,De.e)((i,r)=>{const l=e();(0,Me.D)(o(function qe(o){return new w.y(n=>o.subscribe(n))}(l))).subscribe(r),r.add(i.subscribe(l))})}(n,{connector:e}):i=>new Xe.c(i,e)}(new Pe.t(1)));e.connect(),this.geocoder$=e}geocode(n){return this.geocoder$.pipe((0,K.w)(e=>this._getGoogleResults(e,n)))}_getGoogleResults(n,e){return Fe(n.geocode)(e).pipe((0,K.w)(([r,l])=>l===ee.OK?(0,Ze.of)(r):(0,Ue._)(l)))}_createGeocoder(){return new google.maps.Geocoder}};T.\u0275fac=function(n){return new(n||T)(t.\u0275\u0275inject(S))},T.\u0275prov=t.\u0275\u0275defineInjectable({token:T,factory:function(o){return T.\u0275fac(o)},providedIn:"root"}),T.ngInjectableDef=(0,t.\u0275\u0275defineInjectable)({factory:function(){return new T((0,t.\u0275\u0275inject)(S))},token:T,providedIn:"root"}),T=a([s("design:paramtypes",[S])],T);class fe{getNativeWindow(){return window}}class be{getNativeDocument(){return document}}const ht=[fe,be];var j=(()=>{return(o=j||(j={}))[o.HTTP=1]="HTTP",o[o.HTTPS=2]="HTTPS",o[o.AUTO=3]="AUTO",j;var o})();const _e=new t.InjectionToken("angular-google-maps LAZY_MAPS_API_CONFIG");let yt=(()=>{let o=class extends S{constructor(e=null,i,r,l){super(),this.localeId=l,this._SCRIPT_ID="agmGoogleMapsApiScript",this.callbackName="agmLazyMapsAPILoader",this._config=e||{},this._windowRef=i,this._documentRef=r}load(){const e=this._windowRef.getNativeWindow();if(e.google&&e.google.maps)return Promise.resolve();if(this._scriptLoadingPromise)return this._scriptLoadingPromise;const i=this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);if(i)return this._assignScriptLoadingPromise(i),this._scriptLoadingPromise;const r=this._documentRef.getNativeDocument().createElement("script");return r.type="text/javascript",r.async=!0,r.defer=!0,r.id=this._SCRIPT_ID,r.src=this._getScriptSrc(this.callbackName),this._assignScriptLoadingPromise(r),this._documentRef.getNativeDocument().body.appendChild(r),this._scriptLoadingPromise}_assignScriptLoadingPromise(e){this._scriptLoadingPromise=new Promise((i,r)=>{this._windowRef.getNativeWindow()[this.callbackName]=()=>{i()},e.onerror=l=>{r(l)}})}_getScriptSrc(e){let r;switch(this._config&&this._config.protocol||j.HTTPS){case j.AUTO:r="";break;case j.HTTP:r="http:";break;case j.HTTPS:r="https:"}const p={v:this._config.apiVersion||"quarterly",callback:e,key:this._config.apiKey,client:this._config.clientId,channel:this._config.channel,libraries:this._config.libraries,region:this._config.region,language:this._config.language||"en-US"!==this.localeId?this.localeId:null};return`${r}//${this._config.hostAndPath||"maps.googleapis.com/maps/api/js"}?${Object.keys(p).filter(b=>null!=p[b]).filter(b=>!Array.isArray(p[b])||Array.isArray(p[b])&&p[b].length>0).map(b=>{let d=p[b];return Array.isArray(d)?{key:b,value:d.join(",")}:{key:b,value:p[b]}}).map(b=>`${b.key}=${b.value}`).join("&")}`}};return o.\u0275fac=function(e){return new(e||o)(t.\u0275\u0275inject(_e,8),t.\u0275\u0275inject(fe),t.\u0275\u0275inject(be),t.\u0275\u0275inject(t.LOCALE_ID))},o.\u0275prov=t.\u0275\u0275defineInjectable({token:o,factory:function(n){return o.\u0275fac(n)}}),o=a([L(0,(0,t.Optional)()),L(0,(0,t.Inject)(_e)),L(3,(0,t.Inject)(t.LOCALE_ID)),s("design:paramtypes",[Object,fe,be,String])],o),o})();var Se;let x=Se=class{static forRoot(n){return{ngModule:Se,providers:[...ht,{provide:S,useClass:yt},{provide:_e,useValue:n}]}}};x.\u0275fac=function(n){return new(n||x)},x.\u0275mod=t.\u0275\u0275defineNgModule({type:x}),x.\u0275inj=t.\u0275\u0275defineInjector({})},4782:(Le,te,m)=>{m.d(te,{d:()=>$});var F=m(4707),Ce=m(3099);function $(R,a,L){let s,A=!1;return R&&"object"==typeof R?({bufferSize:s=1/0,windowTime:a=1/0,refCount:A=!1,scheduler:L}=R):s=R??1/0,(0,Ce.B)({connector:()=>new F.t(s,a,L),resetOnError:!0,resetOnComplete:!1,resetOnRefCountZero:A})}}}]);